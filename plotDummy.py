# coding: utf-8
import ROOT
canvas = ROOT.TCanvas("canvas", "canvas")
rtfile = ROOT.TFile("fitPtZlep1.root")
histdy = rtfile.Get("DY/ZPt_mm")
histdy.SetFillColor(ROOT.kYellow)
canvas.Update()
var = "ZPt_mm"
bkhist = rtfile.Get("bkgd/%s" % var)
bkhist
bkhist.SetFillColor(ROOT.kGray)
canvas.Update()
data_obs = rtfile.Get("data_obs")
data_hist = data_obs.Get(var)
data_hist.SetMarkerStyle(8)
canvas.Update()
hist_stack = ROOT.THStack("stack", "stack")
hist_stack.Add(bkhist)
hist_stack.Add(histdy)
hist_stack.Draw("hist")
canvas.Update()
data_hist.Draw("e0 same")
canvas.Update()
canvas.Print("~/www/ZPtFitTest/%s.pdf" % var)

histdy.SetFillColor(0)
histdy_UpErr = rtfile.Get("DY/%s_dummyErrUp" % var)
histdy_DownErr = rtfile.Get("DY/%s_dummyErrDown" % var)
histdy_UpErr.SetLineStyle(7)
histdy_DownErr.SetLineStyle(7)
histdy_UpErr.SetLineColor(ROOT.kRed)
histdy_DownErr.SetLineColor(ROOT.kRed)
histdy_UpErr.Draw("hist")
histdy.Draw("hist same")
histdy_DownErr.Draw("hist same")
canvas.Print("~/www/ZPtFitTest/%s_err.pdf" % var)
print "DY yield", histdy.Integral()
print "bkgd yield", bkhist.Integral()
print "data yield", data_hist.Integral()
